/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import java.util.logging.Level;
import java.util.logging.Logger;
import frames.ComboBoxMultiSelection;
import java.awt.Dimension;
import javax.swing.JComboBox;
import frames.ComboBoxMultiSelection;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.CardLayout;
import java.util.List;

import JDBC.jdbcConnection;
import frames.logInToAdminFrame;
import frames.servicesSelectionFrame;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector; // For DefaultTableModel
import javax.swing.table.DefaultTableModel; // For table model
import javax.swing.event.ListSelectionEvent; // For table row selection
import javax.swing.event.ListSelectionListener; // For table row selection
import java.util.Arrays; // For splitting services string
import java.util.List; // Ensure java.util.List is imported

/**
 *
 * @author ADMIN
 */

public class homeFrame extends javax.swing.JFrame {

    private String currentUserRole;
    private ComboBoxMultiSelection<String> servicesComboBox;
    private int selectedAppointmentId = -1; // To store the ID of the selected row for update/delete

    Color defaultcolor = new Color(0, 0, 0);
    Color clickedcolor = new Color(102, 102, 102);
    Color white = new Color(255, 255, 255);

    public homeFrame() {
//        initComponents();
//        this.currentUserRole = "Guest";
//        System.out.println("Home frame initialized without a specific role. Defaulting to: " + this.currentUserRole);

        initComponents();
        this.currentUserRole = "Guest";
        System.out.println("Home frame initialized without a specific role. Defaulting to: " + this.currentUserRole);
        customizeUIBasedOnRole();
        fetchAppointments();
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Ensure the event is not still adjusting (prevents double-triggering)
                if (!e.getValueIsAdjusting()) {
                    jTable1MouseClicked(); 
                }
            }
        });
    }
    
 public homeFrame(String userRole) {
        initComponents();
        this.currentUserRole = userRole;
        System.out.println("User logged in with role: " + this.currentUserRole);
        customizeUIBasedOnRole();
        fetchAppointments(); // Load data on startup
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    jTable1MouseClicked();
                }
            }
        });
    }

 private void customizeUIBasedOnRole() {
        if (this.currentUserRole != null) {
            if ("SuperAdmin".equals(this.currentUserRole) || "Admin".equals(this.currentUserRole)) {
                System.out.println("Enabling Admin/SuperAdmin features.");
            } else if ("Staff".equals(this.currentUserRole)) {
                System.out.println("Enabling Staff features.");
            } else {
                System.out.println("Unknown role: " + this.currentUserRole);
            }
        } else {
            System.out.println("No role set for UI customization.");
        }
    }
    
   
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */

    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        appointmentsButton = new javax.swing.JButton();
        recordsButton = new javax.swing.JButton();
        servicesButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        appointmentsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jTextFieldTotalBill = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel13 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        servicesTypesButton = new javax.swing.JButton();
        addAppointmentButton = new javax.swing.JButton();
        servicesPanel = new javax.swing.JPanel();
        recordsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        recordsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        settingsPanel = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        aboutPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        aboutUsPanel = new javax.swing.JPanel();
        themePanel = new javax.swing.JPanel();

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("jMenu1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setMinimumSize(new java.awt.Dimension(1200, 700));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 700));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Green Modern Veterinary Clinic Logo.png"))); // NOI18N
        jLabel11.setPreferredSize(new java.awt.Dimension(260, 53));
        jPanel2.add(jLabel11);

        appointmentsButton.setBackground(new java.awt.Color(0, 0, 0));
        appointmentsButton.setForeground(new java.awt.Color(255, 255, 255));
        appointmentsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/appointments.png"))); // NOI18N
        appointmentsButton.setText("Appointments");
        appointmentsButton.setBorder(null);
        appointmentsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                appointmentsButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                appointmentsButtonMouseReleased(evt);
            }
        });
        appointmentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentsButtonActionPerformed(evt);
            }
        });
        jPanel2.add(appointmentsButton);

        recordsButton.setBackground(new java.awt.Color(0, 0, 0));
        recordsButton.setForeground(new java.awt.Color(255, 255, 255));
        recordsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/records.png"))); // NOI18N
        recordsButton.setText("Records");
        recordsButton.setBorder(null);
        recordsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                recordsButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                recordsButtonMouseReleased(evt);
            }
        });
        recordsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordsButtonActionPerformed(evt);
            }
        });
        jPanel2.add(recordsButton);

        servicesButton.setBackground(new java.awt.Color(0, 0, 0));
        servicesButton.setForeground(new java.awt.Color(255, 255, 255));
        servicesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/services.png"))); // NOI18N
        servicesButton.setText("Services");
        servicesButton.setBorder(null);
        servicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesButtonActionPerformed(evt);
            }
        });
        jPanel2.add(servicesButton);

        settingsButton.setBackground(new java.awt.Color(0, 0, 0));
        settingsButton.setForeground(new java.awt.Color(255, 255, 255));
        settingsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N
        settingsButton.setText("Settings");
        settingsButton.setBorder(null);
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });
        jPanel2.add(settingsButton);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel10.setLayout(new java.awt.CardLayout());

        appointmentsPanel.setBackground(new java.awt.Color(153, 153, 153));
        appointmentsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Client Name", "Address", "Email", "Contact", "Pet Name", "Species", "Breed", "Service/s", "Schedule", "Assistant", "Total Bill", "ID" // Added Address and ID
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        // Hide the ID column from view (optional, but good for internal IDs)
        jTable1.getColumnModel().getColumn(11).setMinWidth(0);
        jTable1.getColumnModel().getColumn(11).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(11).setWidth(0);
        jTable1.setOpaque(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        appointmentsPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 1180, 150));

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CLIENT INFORMATION");
        jPanel6.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 240, -1));

        jLabel3.setText("Client Name:");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel6.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 140, -1));

        jLabel4.setText("Address:");
        jPanel6.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));
        jPanel6.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 140, -1));
        jPanel6.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 140, -1));

        jLabel6.setText("Contact:");
        jPanel6.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setText("TOTAL BILL");
        jPanel6.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        jPanel17.setBackground(new java.awt.Color(204, 204, 204));

        jTextFieldTotalBill.setText("jTextField14");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jTextFieldTotalBill, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldTotalBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 220, 90));

        jLabel12.setText("Email:");
        jPanel6.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));
        jPanel6.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 140, -1));

        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 240, 290));

        appointmentsPanel.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 60, 260, 320));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        appointmentsPanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 220, 100, -1));

        jLabel5.setText("Assigned Staff:");

        jPanel18.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(30, 30, 30))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        appointmentsPanel.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, 50));

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        appointmentsPanel.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 560, 111, -1));

        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        appointmentsPanel.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 560, 103, -1));

        jButton5.setText("Edit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        appointmentsPanel.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 560, 88, -1));

        jButton6.setText("Print Receipt");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        appointmentsPanel.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 560, -1, -1));

        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton8.setText("Add Another");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 250, 210, -1));

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("PET INFORMATION");
        jPanel7.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 250, -1));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 75, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 63, Short.MAX_VALUE)
        );

        jPanel7.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        jLabel8.setText("Pet Name:");
        jPanel7.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 113, -1, -1));

        jLabel9.setText("Species:");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jLabel10.setText("Breed:");
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        jPanel7.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 130, -1));
        jPanel7.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 130, -1));
        jPanel7.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 130, -1));

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setText("Selected Services:");
        jPanel9.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 6, -1, -1));

        jLabel16.setText("Assign Assistant:");
        jPanel9.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 115, -1, -1));

        jLabel15.setText("Schedule:");
        jPanel9.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 115, -1, -1));
        jPanel9.add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 112, 101, -1));
        jPanel9.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(81, 112, 96, -1));

        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
        );

        jPanel9.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 26, 400, 80));

        jPanel7.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 430, 140));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Bill");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 20, 140, 170));

        servicesTypesButton.setText("Services Types");
        servicesTypesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesTypesButtonActionPerformed(evt);
            }
        });
        jPanel7.add(servicesTypesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(267, 20, 420, -1));

        jPanel13.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 860, 200));

        addAppointmentButton.setText("Add Appointment");
        addAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAppointmentButtonActionPerformed(evt);
            }
        });
        jPanel13.add(addAppointmentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 220, 210, -1));

        jScrollPane3.setViewportView(jPanel13);

        appointmentsPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 890, 310));

        jPanel10.add(appointmentsPanel, "card3");

        servicesPanel.setBackground(new java.awt.Color(255, 255, 204));

        javax.swing.GroupLayout servicesPanelLayout = new javax.swing.GroupLayout(servicesPanel);
        servicesPanel.setLayout(servicesPanelLayout);
        servicesPanelLayout.setHorizontalGroup(
            servicesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        servicesPanelLayout.setVerticalGroup(
            servicesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
        );

        jPanel10.add(servicesPanel, "card5");

        recordsPanel.setBackground(new java.awt.Color(241, 239, 236));
        recordsPanel.setLayout(new java.awt.GridBagLayout());

        recordsTable.setAutoCreateRowSorter(true);
        recordsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Photo", "Pet Name", "Species", "Breed", "Service/s", "Schedule", "Assistant", "Address", "Email", "contactNumber", "Total Bill", "Status"
            }
        ));
        jScrollPane2.setViewportView(recordsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1126;
        gridBagConstraints.ipady = 530;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(18, 33, 31, 31);
        recordsPanel.add(jScrollPane2, gridBagConstraints);

        jLabel1.setText("Search:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 20, 0, 0);
        recordsPanel.add(jLabel1, gridBagConstraints);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 177;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 6, 0, 0);
        recordsPanel.add(jTextField1, gridBagConstraints);

        jPanel10.add(recordsPanel, "card4");

        settingsPanel.setLayout(new java.awt.BorderLayout());

        jPanel11.setBackground(new java.awt.Color(0, 0, 0));
        jPanel11.setPreferredSize(new java.awt.Dimension(130, 642));
        jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 30));

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("About Us");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jButton7.setPreferredSize(new java.awt.Dimension(130, 50));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton7);

        jButton9.setBackground(new java.awt.Color(0, 0, 0));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Theme");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 102)));
        jButton9.setPreferredSize(new java.awt.Dimension(130, 50));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton9);

        jButton15.setBackground(new java.awt.Color(0, 0, 0));
        jButton15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 255, 255));
        jButton15.setText("Log In to Admin");
        jButton15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        jButton15.setPreferredSize(new java.awt.Dimension(130, 50));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton15);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Log out");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        jButton1.setPreferredSize(new java.awt.Dimension(130, 50));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton1);

        settingsPanel.add(jPanel11, java.awt.BorderLayout.CENTER);

        aboutPanel.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jPanel24.setLayout(new java.awt.CardLayout());

        aboutUsPanel.setBackground(new java.awt.Color(204, 255, 255));

        javax.swing.GroupLayout aboutUsPanelLayout = new javax.swing.GroupLayout(aboutUsPanel);
        aboutUsPanel.setLayout(aboutUsPanelLayout);
        aboutUsPanelLayout.setHorizontalGroup(
            aboutUsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1094, Short.MAX_VALUE)
        );
        aboutUsPanelLayout.setVerticalGroup(
            aboutUsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
        );

        jPanel24.add(aboutUsPanel, "card2");

        themePanel.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout themePanelLayout = new javax.swing.GroupLayout(themePanel);
        themePanel.setLayout(themePanelLayout);
        themePanelLayout.setHorizontalGroup(
            themePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1094, Short.MAX_VALUE)
        );
        themePanelLayout.setVerticalGroup(
            themePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
        );

        jPanel24.add(themePanel, "card3");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1094, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 637, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        aboutPanel.add(jPanel3, java.awt.BorderLayout.CENTER);

        settingsPanel.add(aboutPanel, java.awt.BorderLayout.EAST);

        jPanel10.add(settingsPanel, "card6");

        jPanel1.add(jPanel10, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Are you sure you want to exit?",
                "Confirm Exit",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void appointmentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentsButtonActionPerformed
        appointmentsPanel.setVisible(true);
        recordsPanel.setVisible(false);
        servicesPanel.setVisible(false);
        settingsPanel.setVisible(false);
//        appointmentsPanel.repaint();
//        appointmentsPanel.revalidate();

    }//GEN-LAST:event_appointmentsButtonActionPerformed

    private void recordsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordsButtonActionPerformed
        appointmentsPanel.setVisible(false);
        recordsPanel.setVisible(true);
        servicesPanel.setVisible(false);
        settingsPanel.setVisible(false);
//        recordsPanel.revalidate();
//        recordsPanel.repaint();
    }//GEN-LAST:event_recordsButtonActionPerformed

    private void appointmentsButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentsButtonMousePressed
        appointmentsButton.setBackground(clickedcolor);
        recordsButton.setBackground(defaultcolor);
        appointmentsButton.setForeground(white);
    }//GEN-LAST:event_appointmentsButtonMousePressed

    private void recordsButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recordsButtonMousePressed
        appointmentsButton.setBackground(defaultcolor);
        recordsButton.setBackground(clickedcolor);
        recordsButton.setForeground(white);
    }//GEN-LAST:event_recordsButtonMousePressed

    private void appointmentsButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentsButtonMouseReleased
        appointmentsButton.setBackground(defaultcolor);
    }//GEN-LAST:event_appointmentsButtonMouseReleased

    private void recordsButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recordsButtonMouseReleased
        recordsButton.setBackground(defaultcolor);
    }//GEN-LAST:event_recordsButtonMouseReleased

    private void servicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesButtonActionPerformed
        appointmentsPanel.setVisible(false);
        recordsPanel.setVisible(false);
        servicesPanel.setVisible(true);
        settingsPanel.setVisible(false);
//        servicesPanel.revalidate();
//        servicesPanel.repaint();
    }//GEN-LAST:event_servicesButtonActionPerformed

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        appointmentsPanel.setVisible(false);
        recordsPanel.setVisible(false);
        servicesPanel.setVisible(false);
        settingsPanel.setVisible(true);
//        settingsPanel.revalidate();
//        settingsPanel.repaint();
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed

    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed

    }//GEN-LAST:event_jTextField6ActionPerformed

    private void addAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAppointmentButtonActionPerformed

        String clientName = jTextField2.getText();
        String address = jTextField3.getText();
        String email = jTextField4.getText(); // Assuming jTextField4 is for client email
        String contact = jTextField5.getText();
        String petName = jTextField6.getText();
        String species = jTextField7.getText();
        String breed = jTextField8.getText();

        // Get selected services from ComboBoxMultiSelection
        // CORRECTED: Ensure you call getSelectedItems() on the 'servicesComboBox' instance, not the class 'ComboBoxMultiSelection'.
        List<String> selectedServicesList = servicesComboBox.getSelectedItems(); // THIS LINE IS CORRECT
        String selectedServices = String.join(", ", selectedServicesList); // Convert list to comma-separated string

        String schedule = jTextField13.getText(); // Assuming jTextField13 is for Schedule
        String assistant = jTextField12.getText(); // Assuming jTextField12 is for Assign Assistant
        double totalBill = 0.0;
        try {
            totalBill = Double.parseDouble(jTextFieldTotalBill.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number for Total Bill.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Basic validation
        if (clientName.isEmpty() || petName.isEmpty() || selectedServicesList.isEmpty() || schedule.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Client Name, Pet Name, Services, and Schedule are required.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Connection conn = null;
        PreparedStatement pstmt = null;

        try {
            conn = jdbcConnection.getConnection();
            if (conn == null) {
                return; // Exit if connection failed
            }

            String sql = "INSERT INTO appointments (client_name, client_address, client_email, client_contact, " +
                         "pet_name, pet_species, pet_breed, selected_services, schedule, assigned_assistant, total_bill) " +
                         "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            pstmt = conn.prepareStatement(sql);

            // Set parameters for the prepared statement (order matters!)
            pstmt.setString(1, clientName);
            pstmt.setString(2, address);
            pstmt.setString(3, email);
            pstmt.setString(4, contact);
            pstmt.setString(5, petName);
            pstmt.setString(6, species);
            pstmt.setString(7, breed);
            pstmt.setString(8, selectedServices);
            pstmt.setString(9, schedule);
            pstmt.setString(10, assistant);
            pstmt.setDouble(11, totalBill);

            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Appointment added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                clearFormFields(); // Clear the form after successful addition
                fetchAppointments(); // Refresh the table
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add appointment.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            System.err.println("Error adding appointment: " + e.getMessage());
            JOptionPane.showMessageDialog(this,
                    "Error adding appointment: " + e.getMessage(),
                    "Database Error",
                    JOptionPane.ERROR_MESSAGE);
        } finally {
            jdbcConnection.closeConnection(conn, pstmt, null);
        }

        
//        List<String> selectedServices = ComboBoxMultiSelection.getSelectedItems();
//        if (selectedServices.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Please select at least one service.", "No Service Selected", JOptionPane.WARNING_MESSAGE);
//        } else {
//            System.out.println("Selected Services: " + selectedServices);
//            JOptionPane.showMessageDialog(this, "Appointment added successfully! Selected Services: " + String.join(", ", selectedServices));
//        }

    }//GEN-LAST:event_addAppointmentButtonActionPerformed

    private void servicesTypesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesTypesButtonActionPerformed
        servicesSelectionFrame selection = new servicesSelectionFrame();
        selection.setVisible(true);
    }//GEN-LAST:event_servicesTypesButtonActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        String clientName = jTextField2.getText();
        String address = jTextField3.getText();
        String email = jTextField4.getText(); // Assuming jTextField4 is for client email
        String contact = jTextField5.getText();
        String petName = jTextField6.getText();
        String species = jTextField7.getText();
        String breed = jTextField8.getText();

        // Get selected services from ComboBoxMultiSelection
        List<String> selectedServicesList = servicesComboBox.getSelectedItems();
        String selectedServices = String.join(", ", selectedServicesList); // Convert list to comma-separated string

        String schedule = jTextField13.getText(); // Assuming jTextField13 is for Schedule
        String assistant = jTextField12.getText(); // Assuming jTextField12 is for Assign Assistant
        double totalBill = 0.0;
        try {
            // Assuming jTextFieldTotalBill is the JTextField for Total Bill.
            // You need to add this JTextField in NetBeans Design View if it's not there.
            totalBill = Double.parseDouble(jTextFieldTotalBill.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number for Total Bill.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Basic validation
        if (clientName.isEmpty() || petName.isEmpty() || selectedServicesList.isEmpty() || schedule.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Client Name, Pet Name, Services, and Schedule are required.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Connection conn = null;
        PreparedStatement pstmt = null;

        try {
            conn = jdbcConnection.getConnection();
            if (conn == null) {
                return; // Exit if connection failed
            }

            String sql = "INSERT INTO appointments (client_name, client_address, client_email, client_contact, "
                    + "pet_name, pet_species, pet_breed, selected_services, schedule, assigned_assistant, total_bill) "
                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            pstmt = conn.prepareStatement(sql);

            // Set parameters for the prepared statement (order matters!)
            pstmt.setString(1, clientName);
            pstmt.setString(2, address);
            pstmt.setString(3, email);
            pstmt.setString(4, contact);
            pstmt.setString(5, petName);
            pstmt.setString(6, species);
            pstmt.setString(7, breed);
            pstmt.setString(8, selectedServices);
            pstmt.setString(9, schedule);
            pstmt.setString(10, assistant);
            pstmt.setDouble(11, totalBill);

            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Appointment added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                clearFormFields(); // Clear the form after successful addition
                fetchAppointments(); // Refresh the table
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add appointment.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            System.err.println("Error adding appointment: " + e.getMessage());
            JOptionPane.showMessageDialog(this,
                    "Error adding appointment: " + e.getMessage(),
                    "Database Error",
                    JOptionPane.ERROR_MESSAGE);
        } finally {
            jdbcConnection.closeConnection(conn, pstmt, null);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (selectedAppointmentId == -1) {
            JOptionPane.showMessageDialog(this, "Please select an appointment from the table to delete.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to delete this appointment?",
                "Confirm Delete", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            Connection conn = null;
            PreparedStatement pstmt = null;

            try {
                conn = jdbcConnection.getConnection();
                if (conn == null) {
                    return;
                }

                String sql = "DELETE FROM appointments WHERE id=?";
                pstmt = conn.prepareStatement(sql);
                pstmt.setInt(1, selectedAppointmentId);

                int rowsAffected = pstmt.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Appointment deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    clearFormFields(); // Clear the form after successful deletion
                    fetchAppointments(); // Refresh the table
                    selectedAppointmentId = -1; // Reset selected ID
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete appointment. No record found with ID: " + selectedAppointmentId, "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (SQLException e) {
                System.err.println("Error deleting appointment: " + e.getMessage());
                JOptionPane.showMessageDialog(this,
                        "Error deleting appointment: " + e.getMessage(),
                        "Database Error",
                        JOptionPane.ERROR_MESSAGE);
            } finally {
                jdbcConnection.closeConnection(conn, pstmt, null);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // The "Edit" button can simply trigger the same logic as clicking a table row.
        // It ensures the form fields are populated if a row is selected.
        jTable1MouseClicked();
        if (selectedAppointmentId == -1) {
            JOptionPane.showMessageDialog(this, "Please select an appointment from the table to edit.", "No Selection", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

    if (selectedAppointmentId == -1) {
        JOptionPane.showMessageDialog(this, "Please select an appointment from the table to update.", "No Selection", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Collect updated data from UI fields
    String clientName = jTextField2.getText();
    String address = jTextField3.getText();
    String email = jTextField4.getText();
    String contact = jTextField5.getText();
    String petName = jTextField6.getText();
    String species = jTextField7.getText();
    String breed = jTextField8.getText();

    List<String> selectedServicesList = servicesComboBox.getSelectedItems();
    String selectedServices = String.join(", ", selectedServicesList);

    String schedule = jTextField13.getText();
    String assistant = jTextField12.getText();
    double totalBill = 0.0;
    try {
        totalBill = Double.parseDouble(jTextFieldTotalBill.getText());
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Please enter a valid number for Total Bill.", "Input Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Basic validation
    if (clientName.isEmpty() || petName.isEmpty() || selectedServicesList.isEmpty() || schedule.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Client Name, Pet Name, Services, and Schedule are required.", "Input Error", JOptionPane.WARNING_MESSAGE);
        return;
    }

    Connection conn = null;
    PreparedStatement pstmt = null;

    try {
        conn = jdbcConnection.getConnection();
        if (conn == null) {
            return;
        }

        String sql = "UPDATE appointments SET client_name=?, client_address=?, client_email=?, client_contact=?, "
                + "pet_name=?, pet_species=?, pet_breed=?, selected_services=?, schedule=?, assigned_assistant=?, total_bill=? "
                + "WHERE id=?";
        pstmt = conn.prepareStatement(sql);

        // Set parameters for the prepared statement (order matters!)
        pstmt.setString(1, clientName);
        pstmt.setString(2, address);
        pstmt.setString(3, email);
        pstmt.setString(4, contact);
        pstmt.setString(5, petName);
        pstmt.setString(6, species);
        pstmt.setString(7, breed);
        pstmt.setString(8, selectedServices);
        pstmt.setString(9, schedule);
        pstmt.setString(10, assistant);
        pstmt.setDouble(11, totalBill);
        pstmt.setInt(12, selectedAppointmentId); // Set the ID for the WHERE clause

        int rowsAffected = pstmt.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(this, "Appointment updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            clearFormFields(); // Clear the form after successful update
            fetchAppointments(); // Refresh the table
            selectedAppointmentId = -1; // Reset selected ID
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update appointment. No record found with ID: " + selectedAppointmentId, "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException e) {
        System.err.println("Error updating appointment: " + e.getMessage());
        JOptionPane.showMessageDialog(this,
                "Error updating appointment: " + e.getMessage(),
                "Database Error",
                JOptionPane.ERROR_MESSAGE);
    } finally {
        jdbcConnection.closeConnection(conn, pstmt, null);
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        aboutUsPanel.setVisible(true);
        themePanel.setVisible(false);
        aboutUsPanel.revalidate();
        aboutUsPanel.repaint();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        aboutUsPanel.setVisible(false);
        themePanel.setVisible(true);
        themePanel.revalidate();
        themePanel.repaint();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        logInToAdminFrame adm = new logInToAdminFrame();
        adm.setVisible(true);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

    }//GEN-LAST:event_jTable1MouseClicked
    private void jTable1MouseClicked(){
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow >= 0) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Retrieve data from the selected row.
        // Column indices must match the order in your DefaultTableModel defined in initComponents().
        selectedAppointmentId = (int) model.getValueAt(selectedRow, 11); // Assuming ID is in column 11 (0-indexed)

        jTextField2.setText(model.getValueAt(selectedRow, 0).toString()); // Client Name
        jTextField3.setText(model.getValueAt(selectedRow, 1).toString()); // Address
        jTextField4.setText(model.getValueAt(selectedRow, 2).toString()); // Email
        jTextField5.setText(model.getValueAt(selectedRow, 3).toString()); // Contact
        jTextField6.setText(model.getValueAt(selectedRow, 4).toString()); // Pet Name
        jTextField7.setText(model.getValueAt(selectedRow, 5).toString()); // Species
        jTextField8.setText(model.getValueAt(selectedRow, 6).toString()); // Breed

        String servicesString = model.getValueAt(selectedRow, 7).toString(); // Selected Services (comma-separated string)
        // Convert comma-separated string back to List<String> for ComboBoxMultiSelection
        // Handle potential null or empty string to avoid error with split()
        if (servicesString != null && !servicesString.trim().isEmpty()) {
            List<String> servicesList = new ArrayList<>(Arrays.asList(servicesString.split(",\\s*")));
            servicesComboBox.setSelectedItems(servicesList); // Set selected items in the multi-selection combo box
        } else {
            servicesComboBox.clearSelectedItems(); // Clear if no services were stored
        }

        jTextField13.setText(model.getValueAt(selectedRow, 8).toString()); // Schedule
        jTextField12.setText(model.getValueAt(selectedRow, 9).toString()); // Assistant
        jTextFieldTotalBill.setText(model.getValueAt(selectedRow, 10).toString()); // Total Bill
    }
    }
    
    
    
private void clearFormFields() {
        jTextField2.setText(""); // Client Name
        jTextField3.setText(""); // Address
        jTextField4.setText(""); // Email
        jTextField5.setText(""); // Contact
        jTextField6.setText(""); // Pet Name
        jTextField7.setText(""); // Species
        jTextField8.setText(""); // Breed
        servicesComboBox.clearSelectedItems(); // Clear selected items in the multi-selection combo box
        jTextField13.setText(""); // Schedule
        jTextField12.setText(""); // Assistant
        // Assuming jTextFieldTotalBill is the JTextField for Total Bill.
        // You need to add this JTextField in NetBeans Design View if it's not there.
        jTextFieldTotalBill.setText("");
        selectedAppointmentId = -1; // Reset selected ID
        jTable1.clearSelection(); // Clear table selection
    }


 private void fetchAppointments() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing table data

        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            conn = jdbcConnection.getConnection();
            if (conn == null) {
                return; // Exit if connection failed
            }

            String sql = "SELECT id, client_name, client_address, client_email, client_contact, " +
                         "pet_name, pet_species, pet_breed, selected_services, schedule, " +
                         "assigned_assistant, total_bill FROM appointments";
            pstmt = conn.prepareStatement(sql);
            rs = pstmt.executeQuery();

            while (rs.next()) {
                // Retrieve data from ResultSet. Ensure column names match your database.
                int id = rs.getInt("id");
                String clientName = rs.getString("client_name");
                String address = rs.getString("client_address");
                String email = rs.getString("client_email");
                String contact = rs.getString("client_contact");
                String petName = rs.getString("pet_name");
                String species = rs.getString("pet_species");
                String breed = rs.getString("pet_breed");
                String services = rs.getString("selected_services");
                String schedule = rs.getString("schedule");
                String assistant = rs.getString("assigned_assistant");
                double totalBill = rs.getDouble("total_bill");

                // Add data to table model. Ensure order matches the table columns defined in initComponents().
                model.addRow(new Object[]{
                    clientName, address, email, contact, // Client Info
                    petName, species, breed,             // Pet Info
                    services, schedule, assistant, totalBill, // Service/Schedule/Bill Info
                    id // Hidden ID column
                });
            }
            System.out.println("Appointments fetched and displayed.");

        } catch (SQLException e) {
            System.err.println("Error fetching appointments: " + e.getMessage());
            JOptionPane.showMessageDialog(this,
                    "Error fetching appointments: " + e.getMessage(),
                    "Database Error",
                    JOptionPane.ERROR_MESSAGE);
        } finally {
            jdbcConnection.closeConnection(conn, pstmt, rs);
        }
}


    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {

    try {
        com.formdev.flatlaf.FlatLightLaf.setup();

    } catch (Exception ex) {
        Logger.getLogger(homeFrame.class.getName()).log(Level.SEVERE, "Failed to set FlatLaf Look and Feel", ex);

        try {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (Exception fallbackEx) {
            Logger.getLogger(homeFrame.class.getName()).log(Level.SEVERE, "Failed to set cross-platform L&F", fallbackEx);
        }
    }

    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new homeFrame().setVisible(true);
        }
    });
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aboutPanel;
    private javax.swing.JPanel aboutUsPanel;
    private javax.swing.JButton addAppointmentButton;
    private javax.swing.JButton appointmentsButton;
    private javax.swing.JPanel appointmentsPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextFieldTotalBill;
    private javax.swing.JButton recordsButton;
    private javax.swing.JPanel recordsPanel;
    private javax.swing.JTable recordsTable;
    private javax.swing.JButton servicesButton;
    private javax.swing.JPanel servicesPanel;
    private javax.swing.JButton servicesTypesButton;
    private javax.swing.JButton settingsButton;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JPanel themePanel;
    // End of variables declaration//GEN-END:variables

    private void testData() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}   
